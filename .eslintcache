[{"/Users/akc/Code/43-algo-tracker/src/components/alert/index.tsx":"1","/Users/akc/Code/43-algo-tracker/src/hooks/useAlert.tsx":"2","/Users/akc/Code/43-algo-tracker/src/components/auth/index.tsx":"3","/Users/akc/Code/43-algo-tracker/src/components/app/index.tsx":"4","/Users/akc/Code/43-algo-tracker/src/index.tsx":"5","/Users/akc/Code/43-algo-tracker/src/context/AlertContext.tsx":"6","/Users/akc/Code/43-algo-tracker/src/context/PopContext.tsx":"7","/Users/akc/Code/43-algo-tracker/src/context/withAlert.tsx":"8"},{"size":2918,"mtime":1608772792529,"results":"9","hashOfConfig":"10"},{"size":1147,"mtime":1608771628707,"results":"11","hashOfConfig":"10"},{"size":11210,"mtime":1608773790293,"results":"12","hashOfConfig":"10"},{"size":8086,"mtime":1608773816144,"results":"13","hashOfConfig":"10"},{"size":1321,"mtime":1608772542206,"results":"14","hashOfConfig":"10"},{"size":964,"mtime":1608771990876,"results":"15","hashOfConfig":"10"},{"size":107,"mtime":1608772632138,"results":"16","hashOfConfig":"10"},{"size":1379,"mtime":1608773879565,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cne9co",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/akc/Code/43-algo-tracker/src/components/alert/index.tsx",["35","36"],"/Users/akc/Code/43-algo-tracker/src/hooks/useAlert.tsx",[],"/Users/akc/Code/43-algo-tracker/src/components/auth/index.tsx",["37"],"import React from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\n// import useAlert from \"../../hooks/useAlert\";\nimport { AlertContext } from \"../../context/withAlert\";\n\nimport { Auth } from \"aws-amplify\";\n\ninterface Form {\n  username: string;\n  email: string;\n  password: string;\n  verificationCode: string;\n}\n\nenum FormState {\n  signUp = \"SIGN_UP\",\n  confirmSignUp = \"CONFIRM_SIGN_UP\",\n  signIn = \"SIGN_IN\",\n  signedIn = \"SIGNED_IN\",\n}\n\nconst initialForm: Form = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  verificationCode: \"\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://ashco.io/\">\n        AshCo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst AuthPage: React.FC = () => {\n  const [formState, setFormState] = React.useState<FormState>(FormState.signIn);\n  const [form, setForm] = React.useState<Form>(initialForm);\n\n  const classes = useStyles();\n\n  // const [alert, dispatch]: any = useAlert();\n\n  const triggerAlert = React.useContext(AlertContext);\n  // const { state, setState } = React.useContext(PopContext);\n\n  const handleChange = (\n    e: React.FormEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setForm({ ...form, [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  async function signIn(e: React.SyntheticEvent) {\n    e.preventDefault();\n    try {\n      await Auth.signIn(form.username, form.password);\n      /* Once the user successfully signs in, update the form state to show the signed in state */\n      setFormState(FormState.signedIn);\n    } catch (err) {\n      console.log({ ...err });\n      // dispatch({ type: \"error\", text: err.log || err.message });\n      triggerAlert(err.log || err.message);\n    }\n  }\n\n  async function signUp(e: React.SyntheticEvent) {\n    e.preventDefault();\n    try {\n      await Auth.signUp({\n        username: form.username,\n        password: form.password,\n        attributes: {\n          email: form.email,\n        },\n      });\n      /* Once the user successfully signs up, update form state to show the confirm sign up form for MFA */\n      setFormState(FormState.confirmSignUp);\n    } catch (err) {\n      // setErrorMsg(err.log || err.message);\n      // setIsSnackbarOpen(true);\n    }\n  }\n\n  async function confirmSignUp(e: React.SyntheticEvent) {\n    e.preventDefault();\n    try {\n      await Auth.confirmSignUp(form.username, form.verificationCode);\n      /* Once the user successfully confirms their account, update form state to show the sign in form */\n      setFormState(FormState.signIn);\n    } catch (err) {\n      // setErrorMsg(err.log || err.message);\n      // setIsSnackbarOpen(true);\n    }\n  }\n\n  const renderAuthForm = (formState: FormState) => {\n    switch (formState) {\n      case \"SIGN_UP\":\n        return (\n          <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n              <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Sign up\n              </Typography>\n              <form className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"username\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"username\"\n                      onChange={handleChange}\n                      value={form.username}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      onChange={handleChange}\n                      value={form.email}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      onChange={handleChange}\n                      value={form.password}\n                    />\n                  </Grid>\n                </Grid>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={signUp}\n                >\n                  Sign Up\n                </Button>\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <Link\n                      onClick={() => setFormState(FormState.signIn)}\n                      variant=\"body2\"\n                    >\n                      Already have an account? Sign in\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n            <Box mt={8}>\n              <Copyright />\n            </Box>\n          </Container>\n        );\n      case \"CONFIRM_SIGN_UP\":\n        return (\n          <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n              <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Confirm sign up\n              </Typography>\n              <form className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"username\"\n                      label=\"Username\"\n                      name=\"username\"\n                      autoComplete=\"username\"\n                      onChange={handleChange}\n                      value={form.username}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"verificationCode\"\n                      label=\"Verification Code\"\n                      type=\"verificationCode\"\n                      id=\"verificationCode\"\n                      onChange={handleChange}\n                      value={form.verificationCode}\n                    />\n                  </Grid>\n                </Grid>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={confirmSignUp}\n                >\n                  Confirm Sign Up\n                </Button>\n              </form>\n            </div>\n            <Box mt={8}>\n              <Copyright />\n            </Box>\n          </Container>\n        );\n      case \"SIGN_IN\":\n        return (\n          <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n              <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n              </Typography>\n              <form className={classes.form} noValidate>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  autoFocus\n                  onChange={handleChange}\n                  value={form.username}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={handleChange}\n                  value={form.password}\n                />\n                <FormControlLabel\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\n                  label=\"Remember me\"\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={signIn}\n                >\n                  Sign In\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                      Forgot password?\n                    </Link>\n                  </Grid>\n                  <Grid item>\n                    <Link\n                      onClick={() => setFormState(FormState.signUp)}\n                      variant=\"body2\"\n                    >\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n            <Box mt={8}>\n              <Copyright />\n            </Box>\n          </Container>\n        );\n      case \"SIGNED_IN\":\n        return <div>Signed In</div>;\n      default:\n        return <div>error</div>;\n    }\n  };\n\n  return <div>{renderAuthForm(formState)}</div>;\n};\n\nexport default AuthPage;\n","/Users/akc/Code/43-algo-tracker/src/components/app/index.tsx",["38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61"],"/Users/akc/Code/43-algo-tracker/src/index.tsx",["62","63","64","65","66","67"],"/Users/akc/Code/43-algo-tracker/src/context/AlertContext.tsx",["68"],"/Users/akc/Code/43-algo-tracker/src/context/PopContext.tsx",[],"/Users/akc/Code/43-algo-tracker/src/context/withAlert.tsx",[],{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":10,"column":18,"nodeType":"71","messageId":"72","endLine":10,"endColumn":26},{"ruleId":"69","severity":1,"message":"74","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":19},{"ruleId":"69","severity":1,"message":"75","line":4,"column":3,"nodeType":"71","messageId":"72","endLine":4,"endColumn":16},{"ruleId":"69","severity":1,"message":"76","line":7,"column":3,"nodeType":"71","messageId":"72","endLine":7,"endColumn":7},{"ruleId":"69","severity":1,"message":"77","line":14,"column":10,"nodeType":"71","messageId":"72","endLine":14,"endColumn":27},{"ruleId":"69","severity":1,"message":"78","line":14,"column":29,"nodeType":"71","messageId":"72","endLine":14,"endColumn":43},{"ruleId":"69","severity":1,"message":"79","line":17,"column":3,"nodeType":"71","messageId":"72","endLine":17,"endColumn":17},{"ruleId":"69","severity":1,"message":"80","line":19,"column":3,"nodeType":"71","messageId":"72","endLine":19,"endColumn":16},{"ruleId":"69","severity":1,"message":"81","line":21,"column":8,"nodeType":"71","messageId":"72","endLine":21,"endColumn":14},{"ruleId":"69","severity":1,"message":"82","line":24,"column":10,"nodeType":"71","messageId":"72","endLine":24,"endColumn":18},{"ruleId":"69","severity":1,"message":"83","line":24,"column":20,"nodeType":"71","messageId":"72","endLine":24,"endColumn":26},{"ruleId":"69","severity":1,"message":"84","line":25,"column":8,"nodeType":"71","messageId":"72","endLine":25,"endColumn":18},{"ruleId":"69","severity":1,"message":"85","line":27,"column":8,"nodeType":"71","messageId":"72","endLine":27,"endColumn":16},{"ruleId":"69","severity":1,"message":"86","line":32,"column":8,"nodeType":"71","messageId":"72","endLine":32,"endColumn":12},{"ruleId":"69","severity":1,"message":"87","line":33,"column":8,"nodeType":"71","messageId":"72","endLine":33,"endColumn":15},{"ruleId":"69","severity":1,"message":"88","line":34,"column":8,"nodeType":"71","messageId":"72","endLine":34,"endColumn":16},{"ruleId":"69","severity":1,"message":"89","line":35,"column":8,"nodeType":"71","messageId":"72","endLine":35,"endColumn":20},{"ruleId":"69","severity":1,"message":"90","line":36,"column":8,"nodeType":"71","messageId":"72","endLine":36,"endColumn":20},{"ruleId":"69","severity":1,"message":"91","line":38,"column":8,"nodeType":"71","messageId":"72","endLine":38,"endColumn":16},{"ruleId":"69","severity":1,"message":"92","line":42,"column":8,"nodeType":"71","messageId":"72","endLine":42,"endColumn":20},{"ruleId":"69","severity":1,"message":"93","line":43,"column":8,"nodeType":"71","messageId":"72","endLine":43,"endColumn":22},{"ruleId":"69","severity":1,"message":"94","line":44,"column":8,"nodeType":"71","messageId":"72","endLine":44,"endColumn":16},{"ruleId":"69","severity":1,"message":"95","line":45,"column":8,"nodeType":"71","messageId":"72","endLine":45,"endColumn":16},{"ruleId":"69","severity":1,"message":"96","line":54,"column":8,"nodeType":"71","messageId":"72","endLine":54,"endColumn":12},{"ruleId":"69","severity":1,"message":"97","line":102,"column":19,"nodeType":"71","messageId":"72","endLine":102,"endColumn":29},{"ruleId":"69","severity":1,"message":"98","line":159,"column":18,"nodeType":"71","messageId":"72","endLine":159,"endColumn":25},{"ruleId":"69","severity":1,"message":"99","line":3,"column":25,"nodeType":"71","messageId":"72","endLine":3,"endColumn":30},{"ruleId":"69","severity":1,"message":"76","line":3,"column":32,"nodeType":"71","messageId":"72","endLine":3,"endColumn":36},{"ruleId":"69","severity":1,"message":"100","line":3,"column":38,"nodeType":"71","messageId":"72","endLine":3,"endColumn":48},{"ruleId":"69","severity":1,"message":"101","line":7,"column":3,"nodeType":"71","messageId":"72","endLine":7,"endColumn":13},{"ruleId":"69","severity":1,"message":"102","line":16,"column":8,"nodeType":"71","messageId":"72","endLine":16,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":17,"column":8,"nodeType":"71","messageId":"72","endLine":17,"endColumn":16},{"ruleId":"69","severity":1,"message":"103","line":12,"column":7,"nodeType":"71","messageId":"72","endLine":12,"endColumn":26},"@typescript-eslint/no-unused-vars","'useAlert' is defined but never used.","Identifier","unusedVar","'setState' is assigned a value but never used.","'CssBaseline' is defined but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'withAuthenticator' is defined but never used.","'AmplifySignOut' is defined but never used.","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'Drawer' is defined but never used.","'blueGrey' is defined but never used.","'orange' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'MailIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'LocationOnIcon' is defined but never used.","'MuiAlert' is defined but never used.","'Snackbar' is defined but never used.","'Form' is defined but never used.","'setIsAdmin' is assigned a value but never used.","'signOut' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","'makeStyles' is defined but never used.","'AlertContext' is defined but never used.","'initialAlert' is assigned a value but never used."]